
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.Timer;
import java.util.TimerTask;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Yassine
 */

public class Env extends javax.swing.JFrame {

        Boolean left = false ;
        Boolean hit = false ;
        int i=0;
        int hp = 100 ;
        int enemyhp=100;
        boolean enemydead=false ;
        boolean youdead = false;
       
    /**
     * Creates new form Env
     */
    public Env() {
        setTitle("Shadows of History");
        initComponents();
        movingenemy();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        player = new javax.swing.JLabel();
        enebar = new javax.swing.JLabel();
        self = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        player.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/player/stand.gif"))); // NOI18N
        getContentPane().add(player, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, 50, 85));

        enebar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile007 (1).png"))); // NOI18N
        getContentPane().add(enebar, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, -1, 50));

        self.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile007 (1).png"))); // NOI18N
        getContentPane().add(self, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, 50));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/player/e.gif"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 220, 50, 85));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/bg/1920x1080 (1).png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 390));

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void movingenemy(){
javax.swing.Timer timer = new javax.swing.Timer(40, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int XX=jLabel2.getX();
                int YY=jLabel2.getY();
                       int X = player.getX();
                 // Move the label by 2 pixels to the right
                if (XX > X+30 && !intersection()) { // If the label goes beyond the frame width, reset its position
                    XX-= 4;
                    jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/player/e_run_l.gif")));
                }
                else if (X+30 > XX && !intersection()) { // If the label goes beyond the frame width, reset its position
                    XX+= 4;
                    jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/player/e_run.gif")));
                }
                
                jLabel2.setLocation(XX, YY); // Update label position
            }
        });
        timer.start(); // Start the timer
}

    
    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        int X = player.getX();
        int Y = player.getY();
        int XX = jLabel2.getX();
        int YY = jLabel2.getY();
         
        if(evt.getKeyCode()==KeyEvent.VK_D)
        {                          
            X+=4;
            player.setLocation(X,Y);
            player.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/player/run.gif")));
            left=false;
        }
        else if(evt.getKeyCode()==KeyEvent.VK_Q)
        {                          
            X-=4;
            player.setLocation(X,Y);
            player.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/player/run_l.gif")));
            left=true;
        }

        else if(evt.getKeyCode()==KeyEvent.VK_SPACE)
            
        {   

            if(left)
            player.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/player/atk2.gif")));
            else {player.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/player/atk2.gif")));}
            if (intersection() )        
                {        
                    
                    
                    
                    enemyhp-=4;
                    if (enemyhp<=100 && enemyhp>=80)
                        enebar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile007 (1).png")));
                    else if(enemyhp<=80 && enemyhp>70)
                        enebar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile006 (1).png")));
                    else if (enemyhp<=70 && enemyhp>60)
                        enebar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile005(1).png")));
                    else if (enemyhp<=60 && enemyhp>=50)
                        enebar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile005(1).png")));
                    else if (enemyhp<=50 && enemyhp>40)
                        enebar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile004 (1).png")));
                    else if (enemyhp<=40 && enemyhp>=30)
                        enebar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile003 (1).png")));
                    else if (enemyhp<=30 && enemyhp>=20)
                        enebar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile002 (1).png")));
                    else if (enemyhp<=20 && enemyhp>=10)
                        enebar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile001 (1).png")));
                    else if (enemyhp<=0)
                    {enebar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile000 (1).png")));
                    enemydead=true;}
                    
                    
                    if(youdead)
                    {
                     self.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/player/dead.gif"))); 
                     Gameover g = new Gameover();
                     g.jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/over/lost.png")));
                     g.show();
                     dispose();
                    }
                    else if(enemydead)
                        {
                     self.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/player/dead.gif"))); 
                     Gameover g = new Gameover();
                     
                     g.jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/over/won.png")));
                     g.show();
                     dispose();
                    }
            }
            
           
        }
        if (intersection() )        
                {        
                    
                    Timer timer = new Timer();
                    timer.scheduleAtFixedRate(new TimerTask() {
                    @Override
                    public void run ()
                    {jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/player/eattack_l.gif")));
                    hp-=2;
                    }
                    },600,5000);
                System.out.println(hp);
                if (hp<=100 && hp>=80)
                        self.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile007 (1).png")));
                    else if(hp<=80 && hp>70)
                        self.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile006 (1).png")));
                    else if (hp<=70 && hp>60)
                        self.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile005(1).png")));
                    else if (hp<=60 && hp>=50)
                        self.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile005(1).png")));
                    else if (hp<=50 && hp>40)
                        self.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile004 (1).png")));
                    else if (hp<=40 && hp>=30)
                        self.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile003 (1).png")));
                    else if (hp<=30 && hp>=20)
                        self.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile002 (1).png")));
                    else if (hp<=20 && hp>=10)
                        self.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile001 (1).png")));
                    else if (hp<=0) {self.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/hpbar/tile000 (1).png")));
                    youdead=true;
                    }
                }
         if (intersection() && evt.getKeyCode() != KeyEvent.VK_SPACE) {
        // Reset character's position to initial coordinates
        player.setLocation(X,Y);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/player/e.gif")));
        
    }

    }//GEN-LAST:event_formKeyPressed
     public boolean intersection(){
    
    Rectangle playerBounds = new Rectangle(player.getX(), player.getY(), player.getWidth(), player.getHeight());
    Rectangle labelBounds = new Rectangle(jLabel2.getX(), jLabel2.getY(), jLabel2.getWidth(), jLabel2.getHeight());
    return playerBounds.intersects(labelBounds);
    
        }

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        int X = player.getX();
        int Y = player.getY();
        if(left==false) 
        { player.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/player/stand.gif")));
        
        }
        else { player.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/player/stand_l.gif")));
       
        }
                int XX = jLabel2.getX();
        int YY = jLabel2.getY();
            if(!intersection())
      {
          if (X<XX)
          {XX-=4;
            jLabel2.setLocation(XX,YY);
          }
          else if (XX<X)
          {XX+=4;
            jLabel2.setLocation(XX,YY);
          }
      }
    }//GEN-LAST:event_formKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Env.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Env.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Env.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Env.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                
                new Env().setVisible(true);
                
                
            }
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel enebar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel player;
    private javax.swing.JLabel self;
    // End of variables declaration//GEN-END:variables
}
